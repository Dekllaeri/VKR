services:
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: vkr_backend
    hostname: vkr_backend
    env_file:
      - .env
    volumes:
      - static_vkr_back:/app/static
      - media_vkr_back:/app/media
    ports:
      - "${BACKEND_HOST_PORT}:${BACKEND_CONTAINER_PORT}"
    command: sh -c "python manage.py collectstatic --no-input &&
      python manage.py makemigrations &&
      python manage.py migrate &&
      python manage.py loaddata vkrbackdata.json  &&
      gunicorn backend_config.wsgi --bind ${BACKEND_WSGI_IP}:${BACKEND_CONTAINER_PORT}"
    restart: always
    depends_on:
      - postgres
    networks:
      - net

  nginx:
    build:
      context: nginx
      dockerfile: Dockerfile
    container_name: vkr_nginx
    restart: always
    volumes:
      - static_vkr_back:/app/static
      - media_vkr_back:/app/media
    env_file:
      - .env
    ports:
      - "${NGINX_HOST_PORT}:${NGINX_CONTAINER_PORT}"
    networks:
      - net
    links:
      - backend
    depends_on:
      - backend

  postgres:
    build:
      context: ./postgres/
      dockerfile: ./Dockerfile
    image: vkr_postgres
    restart: always
    container_name: vkr_postgres
    environment:
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      PGDATA: "/var/lib/postgresql/data/pgdata"
    env_file:
      - .env
    volumes:
      - "./db_data:/var/lib/postgresql/data"
    networks:
      - net
    ports:
      - "${POSTGRES_PORT}:${POSTGRES_PORT}"

networks:
  net:
    driver: bridge

volumes:
  static_vkr_back:
  media_vkr_back:
  db_data: